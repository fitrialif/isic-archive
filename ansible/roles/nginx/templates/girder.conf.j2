server {
    listen {% if ssl %}443{% else %}80{% endif %};
    server_name {{ site_hostname }}{% if not redirect_canonical %} default_server{% endif %};

    {% if ssl -%}
      {{ ssl_common_params }}
      ssl_certificate /etc/ssl/certs/{{ site_hostname }}.pem;
      ssl_certificate_key /etc/ssl/private/{{ site_hostname }}.key;
    {% endif %}

    location / {
        proxy_pass http://localhost:{{ girder_port }};

        proxy_http_version 1.1;

        proxy_set_header Host $proxy_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # fixes an issue with responses over 1024m
        proxy_buffering off;

        # Must set the following for SSE notifications to work
        proxy_cache off;
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }
}

{% if upstream_proxy %}
server {
    listen 80;
    server_name proxy.isic-archive.test;

    location / {
        proxy_pass http://localhost:{{ girder_port }};
    }
    location /api/v1 {
        proxy_pass https://isic-archive.com;

        proxy_http_version 1.1;

        proxy_set_header Host $proxy_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;

        # fixes an issue with responses over 1024m
        proxy_buffering off;

        # Must set the following for SSE notifications to work
        proxy_cache off;
        proxy_set_header Connection '';
        chunked_transfer_encoding off;
        proxy_read_timeout 600s;
        proxy_send_timeout 600s;
    }
}
{% endif %}

{% if redirect_canonical %}
server {
    listen 80 default_server;
    server_name {% if ssl %}{{ site_hostname }}{% endif %} www.{{ site_hostname }};

    return 301 http{% if ssl %}s{% endif %}://{{ site_hostname }}$request_uri;
}

{% if ssl %}
server {
    listen 443 default_server;
    server_name www.{{ site_hostname }};

    {{ ssl_common_params }}
    ssl_certificate /etc/ssl/certs/{{ site_hostname }}.pem;
    ssl_certificate_key /etc/ssl/private/{{ site_hostname }}.key;

    return 301 https://{{ site_hostname }}$request_uri;
}
{% endif %}
{% endif %}
